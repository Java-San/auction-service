service:
  name: auction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-offline

# informacion del proveedor de la nube
provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  iamRoleStatements: # ac√° le damos permiso a la lambda para que realice escritura sobre dynamo (tablas)
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

# definimos el recurso de la tabla que vamos a crear
resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

# definimos las funciones a utilizar
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
  
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
  
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
  
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid

  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule: rate(1 minute)

custom:
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  bundle:
    linting: false
 